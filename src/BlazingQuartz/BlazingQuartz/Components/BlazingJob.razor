<MudForm @ref="_form" Model="@JobDetail" IsValidChanged="OnSetIsValid">
    <MudStack Spacing="1">
        <div class="d-flex flex-grow-1 gap-2">
            <MudTextField @bind-Value="JobDetail.Name"
                        For="@(() => JobDetail.Name)"
                        Required="true"
                        Validation="@(async (string name) => await ValidateJobName(name))"
                        RequiredError="Job name is required"
                        Immediate="true"
                        Variant="Variant.Outlined"
                        Margin="Margin.Dense"
                        ReadOnly="IsReadOnly"
                        Label="Name" />
            <MudAutocomplete T="string" Label="Group" @bind-Value="JobDetail.Group"
                            SearchFunc="SearchJobGroup"
                            ResetValueOnEmptyText="true"
                            Required="true"
                            RequiredError="Group name is required"
                            Dense="true"
                            Margin="Margin.Dense"
                            Variant="Variant.Outlined"
                            ReadOnly="IsReadOnly"
                            CoerceValue="true" />
        </div>

        <MudSelect T="Type" Label="Job Class" Variant="Variant.Outlined"
                Required="true"
                RequiredError="Job class is required"
                ReadOnly="IsReadOnly"
                @bind-Value="JobDetail.JobClass"
                Margin="Margin.Dense" AnchorOrigin="Origin.BottomCenter">
            @foreach (var cls in AvailableJobTypes)
            {
                <MudSelectItem T="Type" Value="cls">@cls.FullName</MudSelectItem>
            }
        </MudSelect>

        <MudTextField @bind-Value="JobDetail.Description"
                    For="@(() => JobDetail.Description)"
                    Lines="2"
                    Immediate="true"
                    Margin="Margin.Dense"
                    Variant="Variant.Outlined"
                    ReadOnly="IsReadOnly"
                    Label="Description" />

        <div class="d-flex justify-space-between mt-3 mb-2">
            <MudText Typo="Typo.h6">Job Data Map</MudText>
            <MudButton Variant="Variant.Filled" Color="Color.Primary"
                OnClick="OnAddDataMap"
                Disabled="IsReadOnly"
                StartIcon="@Icons.Filled.Add">Add</MudButton>
        </div>

        <MudSimpleTable Hover="true" Dense="true" 
            Striped="true" Outlined="true"
            FixedHeader="true" Style="height:280px;">
            <colgroup>
                <col />
                <col />
                <col style="width: 200px;"/>
                <col style="width: 60px;" />
            </colgroup>
            <thead>
                <tr>
                    <th>Key</th>
                    <th>Value</th>
                    <th>Type</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var row in @JobDetail.JobDataMap)
                {
                    <tr>
                        <td>@row.Key</td>
                        <td>@row.Value.ToString()</td>
                        <td>@row.GetDataMapTypeDescription()</td>
                        <td class="d-flex">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small"
                                OnClick="() => OnEditDataMap(row)"
                                Disabled="IsReadOnly"
                                aria-label="Edit"></MudIconButton>
                            <MudIconButton Icon="@Icons.Material.Filled.ContentCopy" Size="Size.Small"
                                OnClick="() => OnCloneDataMap(row)"
                                Disabled="IsReadOnly"
                                aria-label="Copy"></MudIconButton>
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Size="Size.Small" 
                                OnClick="() => OnDeleteDataMap(row)"
                                Disabled="IsReadOnly"
                                aria-label="Delete"></MudIconButton>
                        </td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>

        <MudCheckBox @bind-Checked="JobDetail.IsDurable"
                        ReadOnly="IsReadOnly"
                        Label="Do not remove job after trigger ends" 
                        aria-label="When checked, job will remain in scheduler after trigger ends"></MudCheckBox>
    </MudStack>
</MudForm>
