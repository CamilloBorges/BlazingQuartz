@using BlazingQuartz.Core.Data.Entities

<MudDialog>
    <DialogContent>
        <div class="d-flex flex-column gap-2">
            <MudTextField T="string" ReadOnly="true" 
                Variant="Variant.Outlined"
                Margin="Margin.Dense"
                Text="@(ExecutionLog.FireTimeUtc?.LocalDateTime.ToString() ??
                          ExecutionLog.DateAddedUtc.LocalDateTime.ToString())" 
                Label="@(ExecutionLog.FireTimeUtc.HasValue ? "Trigger time" : "Log time")" />

            @if(ExecutionLog.ExecutionLogDetail?.ExecutionDetails != null)
            {
                <MudTextField T="string" Label="Output" ReadOnly="true"
                    Variant="Variant.Outlined" 
                    Margin="Margin.Dense"
                    Text="@ExecutionLog.ExecutionLogDetail.ExecutionDetails" Lines="5" />
            }

            @if (ExecutionLog.ErrorMessage != null)
            {
                <MudTextField T="string" Variant="Variant.Outlined" Label="Exception Message"
                    ReadOnly="true"
                    Margin="Margin.Dense"
                    Text="@ExecutionLog.ErrorMessage" />
            }
            @if(ExecutionLog.ExecutionLogDetail?.ErrorStackTrace != null)
            {
                <MudTextField T="string" Variant="Variant.Outlined"
                    ReadOnly="true" Label="Stack Trace"
                    Margin="Margin.Dense"
                    Text="@ExecutionLog.ExecutionLogDetail.ErrorStackTrace" Lines="6" />

                @if (ExecutionLog.ExecutionLogDetail?.ErrorCode != null)
                {
                    <MudText Typo="Typo.caption">
                        @(ExecutionLog.ExecutionLogDetail.ErrorCode + " " + ExecutionLog.ExecutionLogDetail.ErrorHelpLink)
                    </MudText>
                }
                else if (ExecutionLog.ExecutionLogDetail?.ErrorHelpLink != null)
                {
                    <MudText Typo="Typo.caption">
                        @ExecutionLog.ExecutionLogDetail.ErrorHelpLink
                    </MudText>
                }
            }
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Close">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public ExecutionLog ExecutionLog { get; set; } = new();

    void Close() => MudDialog.Cancel();
}