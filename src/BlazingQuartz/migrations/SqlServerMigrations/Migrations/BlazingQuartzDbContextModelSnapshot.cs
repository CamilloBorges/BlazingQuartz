// <auto-generated />
using System;
using BlazingQuartz.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SqlServerMigrations.Migrations
{
    [DbContext(typeof(BlazingQuartzDbContext))]
    partial class BlazingQuartzDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlazingQuartz.Core.Data.Entities.ExecutionLog", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogId"), 1L, 1);

                    b.Property<DateTimeOffset>("DateAddedUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("FireTimeUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("IsException")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVetoed")
                        .HasColumnType("bit");

                    b.Property<string>("JobGroup")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("JobName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<TimeSpan?>("JobRunTime")
                        .HasColumnType("time");

                    b.Property<string>("LogType")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Result")
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RetryCount")
                        .HasColumnType("int");

                    b.Property<string>("RunInstanceId")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset?>("ScheduleFireTimeUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TriggerGroup")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TriggerName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("LogId");

                    b.HasIndex("RunInstanceId")
                        .IsUnique()
                        .HasFilter("[RunInstanceId] IS NOT NULL");

                    b.HasIndex("DateAddedUtc", "LogType");

                    b.HasIndex("TriggerName", "TriggerGroup", "JobName", "JobGroup", "DateAddedUtc");

                    b.ToTable("bqz_ExecutionLogs");
                });

            modelBuilder.Entity("BlazingQuartz.Core.Data.Entities.ExecutionLog", b =>
                {
                    b.OwnsOne("BlazingQuartz.Core.Data.Entities.ExecutionLogDetail", "ExecutionLogDetail", b1 =>
                        {
                            b1.Property<long>("LogId")
                                .HasColumnType("bigint");

                            b1.Property<int?>("ErrorCode")
                                .HasColumnType("int");

                            b1.Property<string>("ErrorHelpLink")
                                .HasMaxLength(1000)
                                .HasColumnType("nvarchar(1000)");

                            b1.Property<string>("ErrorStackTrace")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ExecutionDetails")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LogId");

                            b1.ToTable("bqz_ExecutionLogDetails", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("LogId");
                        });

                    b.Navigation("ExecutionLogDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
